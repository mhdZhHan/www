---
import type { HTMLTag, Polymorphic } from "astro/types";
import { tv, type VariantProps } from "tailwind-variants";

type Props<Tag extends HTMLTag = "p"> = Polymorphic<{ as: Tag }> & TextVariants;

export type TextVariants = VariantProps<typeof textVariants>;

export const textVariants = tv({
  base: "",
  defaultVariants: {
    size: "default",
    weight: "normal",
  },
  variants: {
    size: {
      xs: "text-xs",
      sm: "text-sm",
      default: "text-base",
      lg: "text-lg",
      xl: "text-xl",
      "2xl": "text-2xl",
      "3xl": "text-3xl",
      "4xl": "text-4xl",
    },
    weight: {
      normal: "font-normal",
      medium: "font-medium",
      semibold: "font-semibold",
      bold: "font-bold",
    },
    variant: {
      default: "text-foreground",
      muted: "text-muted-foreground",
      destructive: "text-destructive",
      accent: "text-accent-foreground",
    },
    font: {
      sans: "font-sans",
    },
  },
});

const {
  as: Tag = "p",
  class: className,
  size,
  weight,
  variant,
  font,
  ...props
} = Astro.props;
---

<Tag
  {...props}
  class={textVariants({ size, weight, variant, font, className })}
>
  <slot />
</Tag>
